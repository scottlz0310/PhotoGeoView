[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "photogeoview"
version = "1.0.0"
description = "AI統合写真地理情報ビューア"
authors = [
    {name = "AI Integration Team", email = "ai-team@photogeoview.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Multimedia :: Graphics :: Viewers",
    "Topic :: Scientific/Engineering :: GIS",
]
dependencies = [
    "PyQt6>=6.4.0",
    "PyQt6-WebEngine>=6.4.0",
    "Pillow>=9.0.0",
    "piexif>=1.1.3",
    "folium>=0.14.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-benchmark>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "safety>=2.3.0",
    "bandit>=1.7.0",
]
ci = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-qt>=4.2.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "safety>=2.3.0",
    "bandit>=1.7.0",
    "toml>=0.10.0",
    "tomlkit>=0.11.0",
    "psutil>=5.9.0",
    "watchdog>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/scottlz0310/PhotoGeoView"
Repository = "https://github.com/scottlz0310/PhotoGeoView.git"
Issues = "https://github.com/scottlz0310/PhotoGeoView/issues"

[project.scripts]
photogeoview = "src.main:main"
ci-simulator = "tools.ci.simulator:main"
pgv-ci = "tools.ci.simulator:main"
photogeoview-ci = "tools.ci.simulator:main"

# Black設定
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort設定
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]
known_third_party = ["PyQt6", "PIL", "folium", "pytest"]

# mypy設定
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "folium.*",
    "piexif.*",
    "psutil.*",
]
ignore_missing_imports = true

# pytest設定
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "ai_compatibility: marks tests as AI compatibility tests",
    "performance: marks tests as performance tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# Coverage設定
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/build/*",
    "*/dist/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Bandit設定（セキュリティ）
[tool.bandit]
exclude_dirs = ["tests", "venv", "build", "dist"]
skips = ["B101", "B601"]  # assert文とshell=Trueの警告をスキップ

# AI統合品質設定
[tool.ai_integration]
quality_threshold = 70.0
coverage_threshold = 80.0
performance_regression_threshold = 30.0

[tool.ai_integration.components]
copilot = {focus = "core_functionality", quality_weight = 1.2}
cursor = {focus = "ui_ux", quality_weight = 1.0}
kiro = {focus = "integration", quality_weight = 1.5}

# CI Simulator設定
[tool.ci_simulator]
enabled = true
default_python_versions = ["3.9", "3.10", "3.11"]
timeout = 1800  # 30 minutes
parallel_jobs = 4
fail_fast = false

[tool.ci_simulator.checks]
code_quality = {enabled = true, auto_fix = false}
test_runner = {enabled = true, coverage_threshold = 80.0}
security_scanner = {enabled = true, fail_on_high = false}
performance_analyzer = {enabled = true, regression_threshold = 30.0}
ai_component_tester = {enabled = true, demo_tests = true}

[tool.ci_simulator.directories]
reports = "reports/ci-simulation"
logs = "logs"
history = ".kiro/ci-history"
temp = "temp/ci-simulation"

[tool.ci_simulator.git_hooks]
pre_commit = {enabled = true, checks = ["code_quality", "test_runner"]}
pre_push = {enabled = false, checks = ["all"]}

[tool.ci_simulator.notifications]
slack_webhook = ""
email_recipients = []
github_status = true
