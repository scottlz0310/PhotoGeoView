# PhotoGeoView Cursor Rules

## プロジェクト概要
PhotoGeoViewは、写真のEXIFデータから位置情報を抽出し、地図上に表示するPythonアプリケーションです。
PySide6を使用したデスクトップアプリケーションとして開発されています。

## 技術スタック
- **言語**: Python 3.8+
- **GUIフレームワーク**: PySide6
- **地図表示**: Folium/Leaflet
- **画像処理**: Pillow
- **EXIF解析**: exifread
- **テーマ管理**: qt-theme-manager
- **開発環境**: Cursor IDE

## コーディング規約

### ファイル命名
- ファイル名: スネークケース (`photo_utils.py`, `exif_parser.py`)
- クラス名: パスカルケース (`PhotoViewer`, `ThemeManager`)
- 変数名: キャメルケース (`imagePath`, `exifData`)
- 定数名: 大文字スネークケース (`DEFAULT_ZOOM`, `MAX_FILE_SIZE`)

### コードスタイル
- Python標準のPEP 8に準拠
- 型ヒントを積極的に使用（`any`の濫用を避ける）
- import順序: 標準ライブラリ → サードパーティ → 自作モジュール
- 行長制限: 88文字（black準拠）

### ドキュメント
- 全公開関数・クラスにdocstring付与
- ファイル冒頭に簡潔な説明コメント
- 複雑なロジックには行内コメント

## プロジェクト構造
```
PhotoGeoView/
├── main.py              # エントリーポイント
├── api/                 # API関連
├── ui/                  # UIコンポーネント
├── utils/               # ユーティリティ
├── model/               # データモデル
├── config.py            # 設定管理
├── requirements.txt     # 依存関係
└── README.md           # プロジェクト説明
```

## AIアシスタント向け指示

### 実装時の注意事項
1. **PySide6固有の考慮事項**:
   - メインスレッドでのUI更新を必ず行う
   - 長時間処理はQThreadPoolまたはQThreadを使用
   - シグナル・スロット接続を適切に管理

2. **画像処理**:
   - メモリ効率を考慮した画像読み込み
   - サムネイル生成時の非同期処理
   - EXIFデータの安全な抽出

3. **地図連携**:
   - 座標系の統一（WGS84）
   - 地図表示の最適化
   - マーカー管理の効率化

### デバッグ・ログ出力
- `print()`の使用は禁止
- `logging`モジュールを使用
- ログレベル: DEBUG, INFO, WARNING, ERROR
- ログ初期化は`logger_setup.py`経由

### 一時コード管理
- デバッグ用変数・関数には`_debug_`プレフィックス
- コミット前に一時コードは削除またはコメント化

## 品質保証
- 型チェック: mypy使用
- コードフォーマット: black使用
- リント: flake8使用
- テスト: pytest使用

## パフォーマンス要件
- 画像読み込み: 非同期処理
- 地図表示: 遅延読み込み
- メモリ使用: 効率的な管理
- UI応答性: ブロッキング処理の回避

## セキュリティ考慮事項
- ファイルパスの検証
- EXIFデータの安全な解析
- ユーザー入力の適切な検証

## 開発ワークフロー
1. 機能ブランチでの開発
2. 型チェック・リント実行
3. テスト実行
4. コードレビュー
5. マージ

## CI/CDパイプライン管理
- **GitHub Actions分析**: `tools/github_actions_ai_analyzer_enhanced.py`を使用
- **効率的な修正**: Github-Actions-AI-Analyzerライブラリを活用
- **ログ分析**: `gh run view --log`で詳細なエラー情報を取得
- **品質向上**: 失敗したワークフローの自動分析と修正提案

## トラブルシューティング
- PySide6の依存関係問題: `pip install PySide6-tools`
- 地図表示問題: 座標系の確認
- メモリ不足: 画像キャッシュの最適化
- CI/CD失敗: AI分析ツールで自動診断と修正

## 参考資料
- PySide6公式ドキュメント
- Python EXIF処理ガイド
- 地図座標系の基礎知識
